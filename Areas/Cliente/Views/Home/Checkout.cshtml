@using E_Commerce_C__ASP.NET.Models
@model Pedido

@{
    ViewData["Title"] = "Checkout";
    var stripePublishableKey = ViewBag.StripePublishableKey as string;
}

<h1>Finalizar Compra</h1>
<div class="container">
    <div class="row">
        <!-- Lado Esquerdo: Dados do Cliente -->
        <div class="col-md-6">
            <form asp-action="ProcessPayment" asp-controller="Home" asp-area="Cliente" method="post" id="payment-form">
                <div class="form-group">
                    <label for="Nome">Nome</label>
                    <input type="text" class="form-control" id="Nome" name="Nome" required />
                </div>
                <div class="form-group">
                    <label for="NumTel">Número de Telefone</label>
                    <input type="text" class="form-control" id="NumTel" name="NumTel" required />
                </div>
                <div class="form-group">
                    <label for="Email">Email</label>
                    <input type="email" class="form-control" id="Email" name="Email" required />
                </div>
                <div class="form-group">
                    <label for="Morada">Morada</label>
                    <input type="text" class="form-control" id="Morada" name="Morada" required />
                </div>
                <div class="form-group">
                    <label for="codigoPost">Código de Postal</label>
                    <input type="text" class="form-control" id="codigoPost" name="codigoPost" required maxlength="8" placeholder="1234-567" oninput="formatCodigoPostal(this)" />
                </div>
                <div class="form-group">
                    <label for="Localidade">Localidade</label>
                    <input type="text" class="form-control" id="Localidade" name="Localidade" required />
                </div>
                <div class="form-group">
                    <label for="payment-method">Escolha o método de pagamento</label>
                    <select class="form-control" id="payment-method" name="paymentMethod" onchange="togglePaymentFields()">
                        <option value="stripe">Cartão de Crédito </option>
                        <option value="mbway">MB WAY </option>
                        <option value="referencia">Entidade e Referência  </option>
                    </select>
                </div>

                <!-- Campo do Stripe -->
                <div id="stripe-fields" class="payment-fields">
                    <div class="form-group">
                        <label for="card-element"><i class="fas fa-credit-card"></i></label>
                        <div id="card-element">
                            <!-- Elemento do Stripe será inserido aqui -->
                        </div>
                        <div id="card-errors" role="alert"></div>
                    </div>
                </div>

                <!-- Campo para MB WAY -->
                <div id="mbway-fields" class="payment-fields d-none">
                    <div class="form-group">
                        <label for="mbway-number"><i class="fas fa-mobile-alt"></i></label>
                        <input type="text" class="form-control" id="mbway-number" name="mbwayNumber" placeholder="Número associado ao MB WAY" />
                    </div>
                </div>

                <!-- Campo para Entidade e Referência -->
                <div id="referencia-fields" class="payment-fields d-none">
                    <div class="form-group">
                        <label for="entidade"><i class="fas fa-file-invoice"></i></label>
                        <input type="text" class="form-control" id="entidade" name="entidade" value="12345" readonly />
                    </div>
                    <div class="form-group">
                        <label for="referencia">Referência</label>
                        <input type="text" class="form-control" id="referencia" name="referencia" value="667 778 889" readonly />
                    </div>
                    <div class="form-group">
                        <label for="montante">Montante</label>
                        <input type="text" class="form-control" id="montante" name="montante" value="@Model.ItensPedido.Sum(item => item.Preco * item.Quantidade).ToString("C")" readonly />
                    </div>
                </div>


                <button type="submit" class="btn btn-success">Finalizar Pedido</button>
            </form>
        </div>

        <!-- Lado Direito: Produtos do Pedido -->
        <div class="col-md-6">
            <h2>Produtos do Pedido</h2>
            @if (Model.ItensPedido != null && Model.ItensPedido.Any())
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Imagem</th>
                            <th>Nome</th>
                            <th>Preço</th>
                            <th>Tipo de produto</th>
                            <th>Cor</th>
                            <th>Quantidade</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItensPedido)
                        {
                            var produto = item.Produto;

                            if (produto != null)
                            {
                                <tr>
                                    <td>
                                        <img src="~/@produto.Imagem" width="100px" height="75px" />
                                    </td>
                                    <td>@produto.Nome</td>
                                    <td>@item.Preco.ToString("C")</td>
                                    <td>@produto.Tag.TagNome</td>
                                    <td>@produto.Cor</td>
                                    <td>@item.Quantidade</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <h4>Total: @Model.ItensPedido.Sum(item => item.Preco * item.Quantidade).ToString("C")</h4>
            }
            else
            {
                <p>Nenhum produto no pedido.</p>
            }
        </div>
    </div>
</div>

<!-- Incluir o JavaScript do Stripe -->
<script src="https://js.stripe.com/v3/"></script>
<script>
    function formatCodigoPostal(input) {
        // Remove todos os caracteres que não são números
        let value = input.value.replace(/\D/g, '');

        // Adiciona o hífen após os primeiros 4 números
        if (value.length > 4) {
            value = value.slice(0, 4) + '-' + value.slice(4, 7);
        }

        // Limita a entrada a 8 caracteres (4+1+3)
        input.value = value.slice(0, 8);
    }
   

    var stripe = Stripe('@stripePublishableKey');
    var elements = stripe.elements();

    var style = {
        base: {
            color: "#32325d",
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: "antialiased",
            fontSize: "16px",
            "::placeholder": {
                color: "#aab7c4"
            }
        },
        invalid: {
            color: "#fa755a",
            iconColor: "#fa755a"
        }
    };

    var card = elements.create("card", { style: style });
    card.mount("#card-element");

    card.on("change", function (event) {
        var displayError = document.getElementById("card-errors");
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = "";
        }
    });

    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Informar ao usuário se houver um erro
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Enviar o token para o servidor
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', result.token.id);
                form.appendChild(hiddenInput);

                // Submeter o formulário
                form.submit();
            }
        });
    });
    
</script>
<!-- JavaScript para alternar entre as opções -->
<script>
    function togglePaymentFields() {
        var selectedMethod = document.getElementById('payment-method').value;

        // Esconder todos os campos primeiro
        document.getElementById('stripe-fields').classList.add('d-none');
        document.getElementById('mbway-fields').classList.add('d-none');
        document.getElementById('referencia-fields').classList.add('d-none');

        // Mostrar os campos relevantes de acordo com a escolha
        if (selectedMethod === 'stripe') {
            document.getElementById('stripe-fields').classList.remove('d-none');
        } else if (selectedMethod === 'mbway') {
            document.getElementById('mbway-fields').classList.remove('d-none');
        } else if (selectedMethod === 'referencia') {
            document.getElementById('referencia-fields').classList.remove('d-none');
        }
    }

    // Inicializar os campos visíveis com a opção padrão
    document.addEventListener("DOMContentLoaded", function () {
        togglePaymentFields();
    });
</script>
